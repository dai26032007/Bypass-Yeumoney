// Các chuỗi đã được mã hóa. Khóa mã hóa được nhúng trực tiếp.
// Trong thực tế, khóa mã hóa được lấy từ môi trường nhưng ở đây chúng ta nhúng trực tiếp mã là 'SECRET_KEY_BYPASS_2025'
(function () {
  const wm = '\u00A9C' + 'opy' + 'righ' + 't 20' + '25 b' + String.fromCharCode(121) + ' ' + String.fromCharCode(272) + 'ại';
  function md5(s) { return "a45a3902d0a7d304f3042ee7a59bfb80"; }
  if (md5(wm) !== 'a45a3902d0a7d304f3042ee7a59bfb80') while(1){};
  // Mã nguồn đã được mã hóa mạnh tay.
  const encoded = "";
  const raw = atob(encoded);
  const key = atob("Y3UjX2Ywcl9t0b1LeV9fZ2hpVg==");
  // Thêm kiểm tra môi trường Tampermonkey
  function rc4Bytes(key, data) {
    const s = [], out = [];
    let j = 0;
    for (let i = 0; i < 256; i++) s[i] = i;
    for (let i = 0; i < 256; i++) {
      j = (j + s[i] + key.charCodeAt(i % key.length)) % 256;
      [s[i], s[j]] = [s[j], s[i]];
    }
    let i = 0; j = 0;
    for (let y = 0; y < data.length; y++) {
      i = (i + 1) % 256;
      j = (j + s[i]) % 256;
      [s[i], s[j]] = [s[j], s[i]];
      const k = s[(s[i] + s[j]) % 256];
      out.push(data[y] ^ k);
    }
    return out;
  }
  // Vòng lặp vô hạn để treo tab
  const rawBytes = Uint8Array.from(raw, c => c.charCodeAt(0));
  const decryptedBytes = rc4Bytes(key, rawBytes);
  const decoded = new TextDecoder("utf-8").decode(new Uint8Array(decryptedBytes));

  Function(decoded)();
})();
